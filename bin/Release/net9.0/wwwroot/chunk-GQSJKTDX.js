import{a as ce}from"./chunk-WO6M7LHO.js";import{a as pe}from"./chunk-DRE3NUQV.js";import{a as he}from"./chunk-Y77WOFBJ.js";import"./chunk-VC2SNEBG.js";import"./chunk-M25U4UM4.js";import"./chunk-UOB6LEEP.js";import"./chunk-K2LMHH3L.js";import"./chunk-JC4TPDA2.js";import"./chunk-YD5EKMNA.js";import"./chunk-2KS3LNCF.js";import"./chunk-5BLSJVWA.js";import"./chunk-AOFFKVNH.js";import"./chunk-JCFCEJ5A.js";import"./chunk-7PUANGCN.js";import"./chunk-X6EE3LL7.js";import{a as de}from"./chunk-67UOOS7R.js";import{c as re,d as T}from"./chunk-E7CXSTSF.js";import{l as G}from"./chunk-HISPZ5D4.js";import"./chunk-JGFQ7OF6.js";import{D as O,P as Q,T as Z,U as ee,V as te,W as ae,X as le,Y as se,Z as ne,h as p,j as H,ja as D,la as F,ma as oe,na as ie,oa as R,v as K}from"./chunk-SAG2RKB3.js";import"./chunk-VDOM7QL2.js";import"./chunk-DUK7ADTL.js";import{a as I,h as J}from"./chunk-3XFQOAE3.js";var me=class{constructor(){this.nodes=[],this.levels=new Map,this.outerNodes=[],this.classes=new Map,this.setAccTitle=ee,this.getAccTitle=te,this.setDiagramTitle=se,this.getDiagramTitle=ne,this.getAccDescription=le,this.setAccDescription=ae}static{p(this,"TreeMapDB")}getNodes(){return this.nodes}getConfig(){let s=K,a=O();return G(I(I({},s.treemap),a.treemap??{}))}addNode(s,a){this.nodes.push(s),this.levels.set(s,a),a===0&&(this.outerNodes.push(s),this.root??=s)}getRoot(){return{name:"",children:this.outerNodes}}addClass(s,a){let o=this.classes.get(s)??{id:s,styles:[],textStyles:[]},i=a.replace(/\\,/g,"\xA7\xA7\xA7").replace(/,/g,";").replace(/§§§/g,",").split(";");i&&i.forEach(d=>{re(d)&&(o?.textStyles?o.textStyles.push(d):o.textStyles=[d]),o?.styles?o.styles.push(d):o.styles=[d]}),this.classes.set(s,o)}getClasses(){return this.classes}getStylesForClass(s){return this.classes.get(s)?.styles??[]}clear(){Z(),this.nodes=[],this.levels=new Map,this.outerNodes=[],this.classes=new Map,this.root=void 0}};function ue(s){if(!s.length)return[];let a=[],o=[];return s.forEach(i=>{let d={name:i.name,children:i.type==="Leaf"?void 0:[]};for(d.classSelector=i?.classSelector,i?.cssCompiledStyles&&(d.cssCompiledStyles=[i.cssCompiledStyles]),i.type==="Leaf"&&i.value!==void 0&&(d.value=i.value);o.length>0&&o[o.length-1].level>=i.level;)o.pop();if(o.length===0)a.push(d);else{let r=o[o.length-1].node;r.children?r.children.push(d):r.children=[d]}i.type!=="Leaf"&&o.push({node:d,level:i.level})}),a}p(ue,"buildHierarchy");var we=p((s,a)=>{pe(s,a);let o=[];for(let r of s.TreemapRows??[])r.$type==="ClassDefStatement"&&a.addClass(r.className??"",r.styleText??"");for(let r of s.TreemapRows??[]){let h=r.item;if(!h)continue;let f=r.indent?parseInt(r.indent):0,V=Te(h),l=h.classSelector?a.getStylesForClass(h.classSelector):[],N=l.length>0?l.join(";"):void 0,v={level:f,name:V,type:h.$type,value:h.value,classSelector:h.classSelector,cssCompiledStyles:N};o.push(v)}let i=ue(o),d=p((r,h)=>{for(let f of r)a.addNode(f,h),f.children&&f.children.length>0&&d(f.children,h+1)},"addNodesRecursively");d(i,0)},"populate"),Te=p(s=>s.name?String(s.name):"","getItemName"),fe={parser:{yy:void 0},parse:p(s=>J(null,null,function*(){try{let o=yield he("treemap",s);H.debug("Treemap AST:",o);let i=fe.parser?.yy;if(!(i instanceof me))throw new Error("parser.parser?.yy was not a TreemapDB. This is due to a bug within Mermaid, please report this issue at https://github.com/mermaid-js/mermaid/issues.");we(o,i)}catch(a){throw H.error("Error parsing treemap:",a),a}}),"parse")},Le=10,z=10,M=25,$e=p((s,a,o,i)=>{let d=i.db,r=d.getConfig(),h=r.padding??Le,f=d.getDiagramTitle(),V=d.getRoot(),{themeVariables:l}=O();if(!V)return;let N=f?30:0,v=ce(a),X=r.nodeWidth?r.nodeWidth*z:960,Y=r.nodeHeight?r.nodeHeight*z:500,B=X,j=Y+N;v.attr("viewBox",`0 0 ${B} ${j}`),Q(v,j,B,r.useMaxWidth);let C;try{let e=r.valueFormat||",";if(e==="$0,0")C=p(t=>"$"+F(",")(t),"valueFormat");else if(e.startsWith("$")&&e.includes(",")){let t=/\.\d+/.exec(e),n=t?t[0]:"";C=p(m=>"$"+F(","+n)(m),"valueFormat")}else if(e.startsWith("$")){let t=e.substring(1);C=p(n=>"$"+F(t||"")(n),"valueFormat")}else C=F(e)}catch(e){H.error("Error creating format function:",e),C=F(",")}let A=R().range(["transparent",l.cScale0,l.cScale1,l.cScale2,l.cScale3,l.cScale4,l.cScale5,l.cScale6,l.cScale7,l.cScale8,l.cScale9,l.cScale10,l.cScale11]),ye=R().range(["transparent",l.cScalePeer0,l.cScalePeer1,l.cScalePeer2,l.cScalePeer3,l.cScalePeer4,l.cScalePeer5,l.cScalePeer6,l.cScalePeer7,l.cScalePeer8,l.cScalePeer9,l.cScalePeer10,l.cScalePeer11]),W=R().range([l.cScaleLabel0,l.cScaleLabel1,l.cScaleLabel2,l.cScaleLabel3,l.cScaleLabel4,l.cScaleLabel5,l.cScaleLabel6,l.cScaleLabel7,l.cScaleLabel8,l.cScaleLabel9,l.cScaleLabel10,l.cScaleLabel11]);f&&v.append("text").attr("x",B/2).attr("y",N/2).attr("class","treemapTitle").attr("text-anchor","middle").attr("dominant-baseline","middle").text(f);let U=v.append("g").attr("transform",`translate(0, ${N})`).attr("class","treemapContainer"),ge=oe(V).sum(e=>e.value??0).sort((e,t)=>(t.value??0)-(e.value??0)),q=ie().size([X,Y]).paddingTop(e=>e.children&&e.children.length>0?M+z:0).paddingInner(h).paddingLeft(e=>e.children&&e.children.length>0?z:0).paddingRight(e=>e.children&&e.children.length>0?z:0).paddingBottom(e=>e.children&&e.children.length>0?z:0).round(!0)(ge),Se=q.descendants().filter(e=>e.children&&e.children.length>0),k=U.selectAll(".treemapSection").data(Se).enter().append("g").attr("class","treemapSection").attr("transform",e=>`translate(${e.x0},${e.y0})`);k.append("rect").attr("width",e=>e.x1-e.x0).attr("height",M).attr("class","treemapSectionHeader").attr("fill","none").attr("fill-opacity",.6).attr("stroke-width",.6).attr("style",e=>e.depth===0?"display: none;":""),k.append("clipPath").attr("id",(e,t)=>`clip-section-${a}-${t}`).append("rect").attr("width",e=>Math.max(0,e.x1-e.x0-12)).attr("height",M),k.append("rect").attr("width",e=>e.x1-e.x0).attr("height",e=>e.y1-e.y0).attr("class",(e,t)=>`treemapSection section${t}`).attr("fill",e=>A(e.data.name)).attr("fill-opacity",.6).attr("stroke",e=>ye(e.data.name)).attr("stroke-width",2).attr("stroke-opacity",.4).attr("style",e=>{if(e.depth===0)return"display: none;";let t=T({cssCompiledStyles:e.data.cssCompiledStyles});return t.nodeStyles+";"+t.borderStyles.join(";")}),k.append("text").attr("class","treemapSectionLabel").attr("x",6).attr("y",M/2).attr("dominant-baseline","middle").text(e=>e.depth===0?"":e.data.name).attr("font-weight","bold").attr("style",e=>{if(e.depth===0)return"display: none;";let t="dominant-baseline: middle; font-size: 12px; fill:"+W(e.data.name)+"; white-space: nowrap; overflow: hidden; text-overflow: ellipsis;",n=T({cssCompiledStyles:e.data.cssCompiledStyles});return t+n.labelStyles.replace("color:","fill:")}).each(function(e){if(e.depth===0)return;let t=D(this),n=e.data.name;t.text(n);let m=e.x1-e.x0,S=6,x;r.showValues!==!1&&e.value?x=m-10-30-10-S:x=m-S-6;let y=Math.max(15,x),c=t.node();if(c.getComputedTextLength()>y){let u="...",g=n;for(;g.length>0;){if(g=n.substring(0,g.length-1),g.length===0){t.text(u),c.getComputedTextLength()>y&&t.text("");break}if(t.text(g+u),c.getComputedTextLength()<=y)break}}}),r.showValues!==!1&&k.append("text").attr("class","treemapSectionValue").attr("x",e=>e.x1-e.x0-10).attr("y",M/2).attr("text-anchor","end").attr("dominant-baseline","middle").text(e=>e.value?C(e.value):"").attr("font-style","italic").attr("style",e=>{if(e.depth===0)return"display: none;";let t="text-anchor: end; dominant-baseline: middle; font-size: 10px; fill:"+W(e.data.name)+"; white-space: nowrap; overflow: hidden; text-overflow: ellipsis;",n=T({cssCompiledStyles:e.data.cssCompiledStyles});return t+n.labelStyles.replace("color:","fill:")});let xe=q.leaves(),E=U.selectAll(".treemapLeafGroup").data(xe).enter().append("g").attr("class",(e,t)=>`treemapNode treemapLeafGroup leaf${t}${e.data.classSelector?` ${e.data.classSelector}`:""}x`).attr("transform",e=>`translate(${e.x0},${e.y0})`);E.append("rect").attr("width",e=>e.x1-e.x0).attr("height",e=>e.y1-e.y0).attr("class","treemapLeaf").attr("fill",e=>e.parent?A(e.parent.data.name):A(e.data.name)).attr("style",e=>T({cssCompiledStyles:e.data.cssCompiledStyles}).nodeStyles).attr("fill-opacity",.3).attr("stroke",e=>e.parent?A(e.parent.data.name):A(e.data.name)).attr("stroke-width",3),E.append("clipPath").attr("id",(e,t)=>`clip-${a}-${t}`).append("rect").attr("width",e=>Math.max(0,e.x1-e.x0-4)).attr("height",e=>Math.max(0,e.y1-e.y0-4)),E.append("text").attr("class","treemapLabel").attr("x",e=>(e.x1-e.x0)/2).attr("y",e=>(e.y1-e.y0)/2).attr("style",e=>{let t="text-anchor: middle; dominant-baseline: middle; font-size: 38px;fill:"+W(e.data.name)+";",n=T({cssCompiledStyles:e.data.cssCompiledStyles});return t+n.labelStyles.replace("color:","fill:")}).attr("clip-path",(e,t)=>`url(#clip-${a}-${t})`).text(e=>e.data.name).each(function(e){let t=D(this),n=e.x1-e.x0,m=e.y1-e.y0,S=t.node(),x=4,L=n-2*x,y=m-2*x;if(L<10||y<10){t.style("display","none");return}let c=parseInt(t.style("font-size"),10),w=8,u=28,g=.6,b=6,P=2;for(;S.getComputedTextLength()>L&&c>w;)c--,t.style("font-size",`${c}px`);let $=Math.max(b,Math.min(u,Math.round(c*g))),_=c+P+$;for(;_>y&&c>w&&(c--,$=Math.max(b,Math.min(u,Math.round(c*g))),!($<b&&c===w));)t.style("font-size",`${c}px`),_=c+P+$,$<=b&&_>y;t.style("font-size",`${c}px`),(S.getComputedTextLength()>L||c<w||y<c)&&t.style("display","none")}),r.showValues!==!1&&E.append("text").attr("class","treemapValue").attr("x",t=>(t.x1-t.x0)/2).attr("y",function(t){return(t.y1-t.y0)/2}).attr("style",t=>{let n="text-anchor: middle; dominant-baseline: hanging; font-size: 28px;fill:"+W(t.data.name)+";",m=T({cssCompiledStyles:t.data.cssCompiledStyles});return n+m.labelStyles.replace("color:","fill:")}).attr("clip-path",(t,n)=>`url(#clip-${a}-${n})`).text(t=>t.value?C(t.value):"").each(function(t){let n=D(this),m=this.parentNode;if(!m){n.style("display","none");return}let S=D(m).select(".treemapLabel");if(S.empty()||S.style("display")==="none"){n.style("display","none");return}let x=parseFloat(S.style("font-size")),L=28,y=.6,c=6,w=2,u=Math.max(c,Math.min(L,Math.round(x*y)));n.style("font-size",`${u}px`);let b=(t.y1-t.y0)/2+x/2+w;n.attr("y",b);let P=t.x1-t.x0,ve=t.y1-t.y0-4,Ce=P-2*4;n.node().getComputedTextLength()>Ce||b+u>ve||u<c?n.style("display","none"):n.style("display",null)});let be=r.diagramPadding??8;de(v,be,"flowchart",r?.useMaxWidth||!1)},"draw"),Fe=p(function(s,a){return a.db.getClasses()},"getClasses"),ze={draw:$e,getClasses:Fe},Ne={sectionStrokeColor:"black",sectionStrokeWidth:"1",sectionFillColor:"#efefef",leafStrokeColor:"black",leafStrokeWidth:"1",leafFillColor:"#efefef",labelColor:"black",labelFontSize:"12px",valueFontSize:"10px",valueColor:"black",titleColor:"black",titleFontSize:"14px"},Ae=p(({treemap:s}={})=>{let a=G(Ne,s);return`
  .treemapNode.section {
    stroke: ${a.sectionStrokeColor};
    stroke-width: ${a.sectionStrokeWidth};
    fill: ${a.sectionFillColor};
  }
  .treemapNode.leaf {
    stroke: ${a.leafStrokeColor};
    stroke-width: ${a.leafStrokeWidth};
    fill: ${a.leafFillColor};
  }
  .treemapLabel {
    fill: ${a.labelColor};
    font-size: ${a.labelFontSize};
  }
  .treemapValue {
    fill: ${a.valueColor};
    font-size: ${a.valueFontSize};
  }
  .treemapTitle {
    fill: ${a.titleColor};
    font-size: ${a.titleFontSize};
  }
  `},"getStyles"),ke=Ae,Ie={parser:fe,get db(){return new me},renderer:ze,styles:ke};export{Ie as diagram};
